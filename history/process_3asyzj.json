[{
  "history_id" : "zl22tXflXGc0",
  "history_input" : "import xarray as xr\nimport pandas as pd\nimport glob, os\nimport numpy as np\nfrom pathlib import Path\nimport datetime\nfrom datetime import timedelta\n# home directory\nhome = str(Path.home())\n\nbase = datetime.datetime.today() - timedelta(days=2)\ndate_list = [base - timedelta(days=x) for x in range(2)]\ndays = [date.strftime('%Y%m%d') for date in date_list]\n\n# nc file need to correspond to the same prediction date in \"/groups/ESS/aalnaim/cmaq/prediction_files/prediction_rf_Jun13.csv\"\n\nprint(\"Opening: \"+\"/groups/ESS/share/projects/SWUS3km/data/cmaqdata/CCTMout/12km/POST/COMBINE3D_ACONC_v531_gcc_AQF5X_\"+days[1]+\"_extracted.nc\")\n      \ndf_cdf = xr.open_dataset(\"/groups/ESS/share/projects/SWUS3km/data/cmaqdata/CCTMout/12km/POST/COMBINE3D_ACONC_v531_gcc_AQF5X_\"+days[1]+\"_extracted.nc\")\n\ndf_csv = pd.read_csv(\"/groups/ESS/aalnaim/cmaq/prediction_files/prediction_rf.csv\")\ndf_csv['YYYYMMDDHH'] = df_csv['YYYYMMDDHH'].astype(str)\ndf_filt = df_csv[df_csv['YYYYMMDDHH'].str.contains(days[1]+\"|\"+days[0], case = False, regex=True)]\ndf_filt = df_filt[(df_filt['YYYYMMDDHH'] > days[1]+'11') & (df_filt['YYYYMMDDHH'] < days[0]+'12')]\n\n# Reshape \"prediction/Latitude/Longitude\" columns to (TSTEP, ROW, COL), these lines will reshape data into (24, 265, 442)\nreshaped_prediction = np.atleast_3d(df_filt['prediction']).reshape(-1, 265, 442)\n\n# Remove \"LAY\" Dimension in O3 variable already in nc file.\nreduced_dim = df_cdf['O3'].sel(LAY=1, drop=True)\n# Swap values from original nc file with new prediction data\nreduced_dim.values = reshaped_prediction\n\n# Apply changes to data variable in nc file\ndf_cdf['O3'] = (['TSTEP', 'ROW', 'COL'], reshaped_prediction)\n\ndf_cdf.to_netcdf('/groups/ESS/aalnaim/cmaq/prediction_nc_files/COMBINE3D_ACONC_v531_gcc_AQF5X_'+days[1]+'_ML_extracted.nc')\n\nprint('Saved updated netCDF file: /groups/ESS/aalnaim/cmaq/prediction_nc_files/COMBINE3D_ACONC_v531_gcc_AQF5X_'+days[1]+'_ML_extracted.nc')",
  "history_output" : "Opening: /groups/ESS/share/projects/SWUS3km/data/cmaqdata/CCTMout/12km/POST/COMBINE3D_ACONC_v531_gcc_AQF5X_20220625_extracted.nc\nSaved updated netCDF file: /groups/ESS/aalnaim/cmaq/prediction_nc_files/COMBINE3D_ACONC_v531_gcc_AQF5X_20220625_ML_extracted.nc\n",
  "history_begin_time" : 1656459498325,
  "history_end_time" : null,
  "history_notes" : null,
  "history_process" : "3asyzj",
  "host_id" : null,
  "indicator" : "Running"
},{
  "history_id" : "kdBDR4zuGRKz",
  "history_input" : "import xarray as xr\nimport pandas as pd\nimport glob, os\nimport numpy as np\nfrom pathlib import Path\nimport datetime\nfrom datetime import timedelta\n# home directory\nhome = str(Path.home())\n\nbase = datetime.datetime.today() - timedelta(days=2)\ndate_list = [base - timedelta(days=x) for x in range(2)]\ndays = [date.strftime('%Y%m%d') for date in date_list]\n\n# nc file need to correspond to the same prediction date in \"/groups/ESS/aalnaim/cmaq/prediction_files/prediction_rf_Jun13.csv\"\n\nprint(\"Opening: \"+\"/groups/ESS/share/projects/SWUS3km/data/cmaqdata/CCTMout/12km/POST/COMBINE3D_ACONC_v531_gcc_AQF5X_\"+days[1]+\"_extracted.nc\"_\n      \ndf_cdf = xr.open_dataset(\"/groups/ESS/share/projects/SWUS3km/data/cmaqdata/CCTMout/12km/POST/COMBINE3D_ACONC_v531_gcc_AQF5X_\"+days[1]+\"_extracted.nc\")\n\ndf_csv = pd.read_csv(\"/groups/ESS/aalnaim/cmaq/prediction_files/prediction_rf.csv\")\ndf_csv['YYYYMMDDHH'] = df_csv['YYYYMMDDHH'].astype(str)\ndf_filt = df_csv[df_csv['YYYYMMDDHH'].str.contains(days[1]+\"|\"+days[0], case = False, regex=True)]\ndf_filt = df_filt[(df_filt['YYYYMMDDHH'] > days[1]+'11') & (df_filt['YYYYMMDDHH'] < days[0]+'12')]\n\n# Reshape \"prediction/Latitude/Longitude\" columns to (TSTEP, ROW, COL), these lines will reshape data into (24, 265, 442)\nreshaped_prediction = np.atleast_3d(df_filt['prediction']).reshape(-1, 265, 442)\n\n# Remove \"LAY\" Dimension in O3 variable already in nc file.\nreduced_dim = df_cdf['O3'].sel(LAY=1, drop=True)\n# Swap values from original nc file with new prediction data\nreduced_dim.values = reshaped_prediction\n\n# Apply changes to data variable in nc file\ndf_cdf['O3'] = (['TSTEP', 'ROW', 'COL'], reshaped_prediction)\n\ndf_cdf.to_netcdf('/groups/ESS/aalnaim/cmaq/prediction_nc_files/COMBINE3D_ACONC_v531_gcc_AQF5X_'+days[1]+'_ML_extracted.nc')\n\nprint('Saved updated netCDF file: /groups/ESS/aalnaim/cmaq/prediction_nc_files/COMBINE3D_ACONC_v531_gcc_AQF5X_'+days[1]+'_ML_extracted.nc')",
  "history_output" : "  File \"processing_test_netcdf.py\", line 17\n    print(\"Opening: \"+\"/groups/ESS/share/projects/SWUS3km/data/cmaqdata/CCTMout/12km/POST/COMBINE3D_ACONC_v531_gcc_AQF5X_\"+days[1]+\"_extracted.nc\"_\n                                                                                                                                                  ^\nSyntaxError: invalid syntax\n",
  "history_begin_time" : 1656459474602,
  "history_end_time" : null,
  "history_notes" : null,
  "history_process" : "3asyzj",
  "host_id" : null,
  "indicator" : "Running"
},{
  "history_id" : "p72xum4kath",
  "history_input" : "import xarray as xr\nimport pandas as pd\nimport glob, os\nimport numpy as np\nfrom pathlib import Path\nimport datetime\nfrom datetime import timedelta\n# home directory\nhome = str(Path.home())\n\nbase = datetime.datetime.today() - timedelta(days=2)\ndate_list = [base - timedelta(days=x) for x in range(3)]\ndays = [date.strftime('%Y%m%d') for date in date_list]\n\n# nc file need to correspond to the same prediction date in \"/groups/ESS/aalnaim/cmaq/prediction_files/prediction_rf_Jun13.csv\"\ndf_cdf = xr.open_dataset(\"/groups/ESS/share/projects/SWUS3km/data/cmaqdata/CCTMout/12km/POST/COMBINE3D_ACONC_v531_gcc_AQF5X_\"+days[2]+\"_extracted.nc\")\n\ndf_csv = pd.read_csv(\"/groups/ESS/aalnaim/cmaq/prediction_files/prediction_rf.csv\")\ndf_csv['YYYYMMDDHH'] = df_csv['YYYYMMDDHH'].astype(str)\ndf_filt = df_csv[df_csv['YYYYMMDDHH'].str.contains(days[1]+\"|\"+days[0], case = False, regex=True)]\ndf_filt = df_filt[(df_filt['YYYYMMDDHH'] > days[1]+'11') & (df_filt['YYYYMMDDHH'] < days[0]+'12')]\n\n# Reshape \"prediction/Latitude/Longitude\" columns to (TSTEP, ROW, COL), these lines will reshape data into (24, 265, 442)\nreshaped_prediction = np.atleast_3d(df_filt['prediction']).reshape(-1, 265, 442)\n\n# Remove \"LAY\" Dimension in O3 variable already in nc file.\nreduced_dim = df_cdf['O3'].sel(LAY=1, drop=True)\n# Swap values from original nc file with new prediction data\nreduced_dim.values = reshaped_prediction\n\n# Apply changes to data variable in nc file\ndf_cdf['O3'] = (['TSTEP', 'ROW', 'COL'], reshaped_prediction)\n\ndf_cdf.to_netcdf('/groups/ESS/aalnaim/cmaq/prediction_nc_files/COMBINE3D_ACONC_v531_gcc_AQF5X_'+days[1]+'_ML_extracted.nc')\n\nprint('Saved updated netCDF file: /groups/ESS/aalnaim/cmaq/prediction_nc_files/COMBINE3D_ACONC_v531_gcc_AQF5X_'+days[1]+'_ML_extracted.nc')",
  "history_output" : "Saved updated netCDF file: /groups/ESS/aalnaim/cmaq/prediction_nc_files/COMBINE3D_ACONC_v531_gcc_AQF5X_20220625_ML_extracted.nc\n",
  "history_begin_time" : 1656453929138,
  "history_end_time" : 1656454194243,
  "history_notes" : null,
  "history_process" : "3asyzj",
  "host_id" : "p6wvf2",
  "indicator" : "Done"
},{
  "history_id" : "tlpe3au2vjr",
  "history_input" : "import xarray as xr\nimport pandas as pd\nimport glob, os\nimport numpy as np\nfrom pathlib import Path\nimport datetime\nfrom datetime import timedelta\n# home directory\nhome = str(Path.home())\n\nbase = datetime.datetime.today() - timedelta(days=2)\ndate_list = [base - timedelta(days=x) for x in range(3)]\ndays = [date.strftime('%Y%m%d') for date in date_list]\n\n# nc file need to correspond to the same prediction date in \"/groups/ESS/aalnaim/cmaq/prediction_files/prediction_rf_Jun13.csv\"\ndf_cdf = xr.open_dataset(\"/groups/ESS/share/projects/SWUS3km/data/cmaqdata/CCTMout/12km/POST/COMBINE3D_ACONC_v531_gcc_AQF5X_\"+days[2]+\"_extracted.nc\")\n\ndf_csv = pd.read_csv(\"/groups/ESS/aalnaim/cmaq/prediction_files/prediction_rf.csv\")\ndf_csv['YYYYMMDDHH'] = df_csv['YYYYMMDDHH'].astype(str)\ndf_filt = df_csv[df_csv['YYYYMMDDHH'].str.contains(days[1]+\"|\"+days[0], case = False, regex=True)]\ndf_filt = df_filt[(df_filt['YYYYMMDDHH'] > days[1]+'11') & (df_filt['YYYYMMDDHH'] < days[0]+'12')]\n\n# Reshape \"prediction/Latitude/Longitude\" columns to (TSTEP, ROW, COL), these lines will reshape data into (24, 265, 442)\nreshaped_prediction = np.atleast_3d(df_filt['prediction']).reshape(-1, 265, 442)\n\n# Remove \"LAY\" Dimension in O3 variable already in nc file.\nreduced_dim = df_cdf['O3'].sel(LAY=1, drop=True)\n# Swap values from original nc file with new prediction data\nreduced_dim.values = reshaped_prediction\n\n# Apply changes to data variable in nc file\ndf_cdf['O3'] = (['TSTEP', 'ROW', 'COL'], reshaped_prediction)\n\ndf_cdf.to_netcdf('/groups/ESS/aalnaim/cmaq/prediction_nc_files/COMBINE3D_ACONC_v531_gcc_AQF5X_'+days[1]+'_ML_extracted.nc')\n\nprint('Saved updated netCDF file: /groups/ESS/aalnaim/cmaq/prediction_nc_files/COMBINE3D_ACONC_v531_gcc_AQF5X_'+days[1]+'_ML_extracted.nc')",
  "history_output" : "bash: python: command not found\n",
  "history_begin_time" : 1656428425283,
  "history_end_time" : 1656428429355,
  "history_notes" : null,
  "history_process" : "3asyzj",
  "host_id" : "p6wvf2",
  "indicator" : "Stopped"
},{
  "history_id" : "60hZgMCFuH2u",
  "history_input" : "import xarray as xr\nimport pandas as pd\nimport glob, os\nimport numpy as np\nfrom pathlib import Path\nimport datetime\nfrom datetime import timedelta\n# home directory\nhome = str(Path.home())\n\n# nc file need to correspond to the same prediction date in \"/groups/ESS/aalnaim/cmaq/prediction_files/prediction_rf_Jun13.csv\"\ndf_cdf = xr.open_dataset(\"/groups/ESS/share/projects/SWUS3km/data/cmaqdata/CCTMout/12km/POST/COMBINE3D_ACONC_v531_gcc_AQF5X_20220612_extracted.nc\")\n\ndf_csv = pd.read_csv(\"/groups/ESS/aalnaim/cmaq/prediction_files/prediction_rf.csv\")\ndf_csv['YYYYMMDDHH'] = df_csv['YYYYMMDDHH'].astype(str)\ndf_filt = df_csv[df_csv['YYYYMMDDHH'].str.contains(\"20220613|20220614\", case = False, regex=True)]\ndf_filt = df_filt[(df_filt['YYYYMMDDHH'] > '2022061311') & (df_filt['YYYYMMDDHH'] < '2022061412')]\n\n# Reshape \"prediction/Latitude/Longitude\" columns to (TSTEP, ROW, COL), these lines will reshape data into (24, 265, 442)\nreshaped_prediction = np.atleast_3d(df_filt['prediction']).reshape(-1, 265, 442)\n\n# Remove \"LAY\" Dimension in O3 variable already in nc file.\nreduced_dim = df_cdf['O3'].sel(LAY=1, drop=True)\n# Swap values from original nc file with new prediction data\nreduced_dim.values = reshaped_prediction\n\n# Apply changes to data variable in nc file\ndf_cdf['O3'] = (['TSTEP', 'ROW', 'COL'], reshaped_prediction)\n\ndf_cdf.to_netcdf('/groups/ESS/aalnaim/cmaq/prediction_nc_files/COMBINE3D_ACONC_v531_gcc_AQF5X_20220612_ML_extracted.nc')",
  "history_output" : "Running",
  "history_begin_time" : 1655501956099,
  "history_end_time" : 1655503046217,
  "history_notes" : null,
  "history_process" : "3asyzj",
  "host_id" : null,
  "indicator" : "Stopped"
},{
  "history_id" : "PoORHAfZg0Ux",
  "history_input" : "import xarray as xr\nimport pandas as pd\nimport glob, os\nimport numpy as np\nfrom pathlib import Path\nimport datetime\nfrom datetime import timedelta\n# home directory\nhome = str(Path.home())\n\n# nc file need to correspond to the same prediction date in \"/groups/ESS/aalnaim/cmaq/prediction_files/prediction_rf_Jun13.csv\"\ndf_cdf = xr.open_dataset(\"/groups/ESS/share/projects/SWUS3km/data/cmaqdata/CCTMout/12km/POST/COMBINE3D_ACONC_v531_gcc_AQF5X_20220612_extracted.nc\")\n\ndf_csv = pd.read_csv(\"/groups/ESS/aalnaim/cmaq/prediction_files/prediction_rf.csv\")\ndf_csv['YYYYMMDDHH'] = df_csv['YYYYMMDDHH'].astype(str)\ndf_filt = df_csv[df_csv['YYYYMMDDHH'].str.contains(\"20220613|20220614\", case = False, regex=True)]\ndf_filt = df_filt[(df_filt['YYYYMMDDHH'] > '2022061311') & (df_filt['YYYYMMDDHH'] < '2022061412')]\n\n# Reshape \"prediction/Latitude/Longitude\" columns to (TSTEP, ROW, COL), these lines will reshape data into (24, 265, 442)\nreshaped_prediction = np.atleast_3d(df_filt['prediction']).reshape(-1, 265, 442)\n\n# Remove \"LAY\" Dimension in O3 variable already in nc file.\nreduced_dim = df_cdf['O3'].sel(LAY=1, drop=True)\n# Swap values from original nc file with new prediction data\nreduced_dim.values = reshaped_prediction\n\n# Apply changes to data variable in nc file\ndf_cdf['O3'] = (['TSTEP', 'ROW', 'COL'], reshaped_prediction)\n\ndf_cdf.to_netcdf('/groups/ESS/aalnaim/cmaq/prediction_nc_files/COMBINE3D_ACONC_v531_gcc_AQF5X_20220612_ML_extracted.nc')",
  "history_output" : null,
  "history_begin_time" : 1655501841903,
  "history_end_time" : null,
  "history_notes" : null,
  "history_process" : "3asyzj",
  "host_id" : null,
  "indicator" : null
},{
  "history_id" : "WICvybCO3non",
  "history_input" : "import xarray as xr\nimport pandas as pd\nimport glob, os\nimport numpy as np\nfrom pathlib import Path\nimport datetime\nfrom datetime import timedelta\n# home directory\nhome = str(Path.home())\n\n# nc file need to correspond to the same prediction date in \"/groups/ESS/aalnaim/cmaq/prediction_files/prediction_rf_Jun13.csv\"\ndf_cdf = xr.open_dataset(\"/groups/ESS/share/projects/SWUS3km/data/cmaqdata/CCTMout/12km/POST/COMBINE3D_ACONC_v531_gcc_AQF5X_20220612_extracted.nc\")\n\ndf_csv = pd.read_csv(\"/groups/ESS/aalnaim/cmaq/prediction_files/prediction_rf.csv\")\ndf_csv['YYYYMMDDHH'] = df_csv['YYYYMMDDHH'].astype(str)\ndf_filt = df_csv[df_csv['YYYYMMDDHH'].str.contains(\"20220613|20220614\", case = False, regex=True)]\ndf_filt = df_filt[(df_filt['YYYYMMDDHH'] > '2022061312') & (df_filt['YYYYMMDDHH'] < '2022061412')]\n\n# Reshape \"prediction/Latitude/Longitude\" columns to (TSTEP, ROW, COL), these lines will reshape data into (24, 265, 442)\nreshaped_prediction = np.atleast_3d(df_filt['prediction']).reshape(-1, 265, 442)\n\n# Remove \"LAY\" Dimension in O3 variable already in nc file.\nreduced_dim = df_cdf['O3'].sel(LAY=1, drop=True)\n# Swap values from original nc file with new prediction data\nreduced_dim.values = reshaped_prediction\n\n# Apply changes to data variable in nc file\ndf_cdf['O3'] = (['TSTEP', 'ROW', 'COL'], reshaped_prediction)\n\ndf_cdf.to_netcdf('/groups/ESS/aalnaim/cmaq/prediction_nc_files/COMBINE3D_ACONC_v531_gcc_AQF5X_20220612_ML_extracted.nc')",
  "history_output" : "",
  "history_begin_time" : 1655496063976,
  "history_end_time" : 1655501871999,
  "history_notes" : null,
  "history_process" : "3asyzj",
  "host_id" : null,
  "indicator" : "Failed"
},{
  "history_id" : "9wdqy7efw4qC",
  "history_input" : "import xarray as xr\nimport pandas as pd\nimport glob, os\nimport numpy as np\nfrom pathlib import Path\nimport datetime\nfrom datetime import timedelta\n# home directory\nhome = str(Path.home())\n\n# nc file need to correspond to the same prediction date in \"/groups/ESS/aalnaim/cmaq/prediction_files/prediction_rf_Jun13.csv\"\ndf_cdf = xr.open_dataset(\"/groups/ESS/share/projects/SWUS3km/data/cmaqdata/CCTMout/12km/POST/COMBINE3D_ACONC_v531_gcc_AQF5X_20220612_extracted.nc\")\n\ndf_csv = pd.read_csv(\"/groups/ESS/aalnaim/cmaq/prediction_files/prediction_rf.csv\")\ndf_csv['YYYYMMDDHH'] = df_csv['YYYYMMDDHH'].astype(str)\ndf_filt = df_csv[df_csv['YYYYMMDDHH'].str.contains(\"20220613|20220614\", case = False, regex=True)]\ndf_filt = df_filt[(df_filt['YYYYMMDDHH'] > '2022061312') & (df_filt['YYYYMMDDHH'] < '2022061412')]\n\n# Reshape \"prediction/Latitude/Longitude\" columns to (TSTEP, ROW, COL), these lines will reshape data into (24, 265, 442)\nreshaped_prediction = np.atleast_3d(df_filt['prediction']).reshape(-1, 265, 442)\n\n# Remove \"LAY\" Dimension in O3 variable already in nc file.\nreduced_dim = df_cdf['O3'].sel(LAY=1, drop=True)\n# Swap values from original nc file with new prediction data\nreduced_dim.values = reshaped_prediction\n\n# Apply changes to data variable in nc file\ndf_cdf['O3'] = (['TSTEP', 'ROW', 'COL'], reshaped_prediction)\n\ndf_cdf.to_netcdf('/groups/ESS/aalnaim/cmaq/prediction_nc_files/COMBINE3D_ACONC_v531_gcc_AQF5X_20220612_ML_extracted.nc')",
  "history_output" : null,
  "history_begin_time" : 1655495993831,
  "history_end_time" : null,
  "history_notes" : null,
  "history_process" : "3asyzj",
  "host_id" : null,
  "indicator" : null
},{
  "history_id" : "beeVZaInXI6r",
  "history_input" : "import xarray as xr\nimport pandas as pd\nimport glob, os\nimport numpy as np\nfrom pathlib import Path\nimport datetime\nfrom datetime import timedelta\n# home directory\nhome = str(Path.home())\n\n# nc file need to correspond to the same prediction date in \"/groups/ESS/aalnaim/cmaq/prediction_files/prediction_rf_Jun13.csv\"\ndf_cdf = xr.open_dataset(\"/groups/ESS/share/projects/SWUS3km/data/cmaqdata/CCTMout/12km/POST/COMBINE3D_ACONC_v531_gcc_AQF5X_20220612_extracted.nc\")\n\ndf_csv = pd.read_csv(\"/groups/ESS/aalnaim/cmaq/prediction_files/prediction_rf.csv\")\ndf_csv['YYYYMMDDHH'] = df_csv['YYYYMMDDHH'].astype(str)\ndf_filt = df_csv[df_csv['YYYYMMDDHH'].str.contains(\"20220613|20220614\", case = False, regex=True)]\ndf_filt = df_filt[(df_filt['YYYYMMDDHH'] > '2022061312') & (df_filt['YYYYMMDDHH'] < '2022061412')]\n\n# Reshape \"prediction/Latitude/Longitude\" columns to (TSTEP, ROW, COL), these lines will reshape data into (24, 265, 442)\nreshaped_prediction = np.atleast_3d(df_filt['prediction']).reshape(-1, 265, 442)\n\n# Remove \"LAY\" Dimension in O3 variable already in nc file.\nreduced_dim = df_cdf['O3'].sel(LAY=1, drop=True)\n# Swap values from original nc file with new prediction data\nreduced_dim.values = reshaped_prediction\n\n# Apply changes to data variable in nc file\ndf_cdf['O3'] = (['TSTEP', 'ROW', 'COL'], reshaped_prediction)\n\ndf_cdf.to_netcdf('/groups/ESS/aalnaim/cmaq/prediction_nc_files/COMBINE3D_ACONC_v531_gcc_AQF5X_20220612_ML_extracted.nc')",
  "history_output" : "",
  "history_begin_time" : 1655494545852,
  "history_end_time" : 1655496023888,
  "history_notes" : null,
  "history_process" : "3asyzj",
  "host_id" : null,
  "indicator" : "Failed"
},{
  "history_id" : "INqHz0JSeptf",
  "history_input" : "import xarray as xr\nimport pandas as pd\nimport glob, os\nimport numpy as np\nfrom pathlib import Path\nimport datetime\nfrom datetime import timedelta\n# home directory\nhome = str(Path.home())\n\n# nc file need to correspond to the same prediction date in \"/groups/ESS/aalnaim/cmaq/prediction_files/prediction_rf_Jun13.csv\"\ndf_cdf = xr.open_dataset(\"/groups/ESS/share/projects/SWUS3km/data/cmaqdata/CCTMout/12km/POST/COMBINE3D_ACONC_v531_gcc_AQF5X_20220612_extracted.nc\")\n\ndf_csv = pd.read_csv(\"/groups/ESS/aalnaim/cmaq/prediction_files/prediction_rf.csv\")\ndf_csv['YYYYMMDDHH'] = df_csv['YYYYMMDDHH'].astype(str)\ndf_filt = df_csv[df_csv['YYYYMMDDHH'].str.contains(\"20220613|20220614\", case = False, regex=True)]\ndf_filt = df_filt[(df_filt['YYYYMMDDHH'] > '2022061312') & (df_filt['YYYYMMDDHH'] < '2022061412')]\n\n# Reshape \"prediction/Latitude/Longitude\" columns to (TSTEP, ROW, COL), these lines will reshape data into (24, 265, 442)\nreshaped_prediction = np.atleast_3d(df_filt['prediction']).reshape(-1, 265, 442)\n\n# Remove \"LAY\" Dimension in O3 variable already in nc file.\nreduced_dim = df_cdf['O3'].sel(LAY=1, drop=True)\n# Swap values from original nc file with new prediction data\nreduced_dim.values = reshaped_prediction\n\n# Apply changes to data variable in nc file\ndf_cdf['O3'] = (['TSTEP', 'ROW', 'COL'], reshaped_prediction)\n\ndf_cdf.to_netcdf('/groups/ESS/aalnaim/cmaq/prediction_nc_files/COMBINE3D_ACONC_v531_gcc_AQF5X_20220612_ML_extracted.nc')",
  "history_output" : "Running",
  "history_begin_time" : 1655493655846,
  "history_end_time" : 1655494421371,
  "history_notes" : null,
  "history_process" : "3asyzj",
  "host_id" : null,
  "indicator" : "Stopped"
},{
  "history_id" : "3nKofAxIaXVd",
  "history_input" : "import xarray as xr\nimport pandas as pd\nimport glob, os\nimport numpy as np\nfrom pathlib import Path\nimport datetime\nfrom datetime import timedelta\n# home directory\nhome = str(Path.home())\n\n# nc file need to correspond to the same prediction date in \"/groups/ESS/aalnaim/cmaq/prediction_files/prediction_rf_Jun13.csv\"\ndf_cdf = xr.open_dataset(\"/groups/ESS/share/projects/SWUS3km/data/cmaqdata/CCTMout/12km/POST/COMBINE3D_ACONC_v531_gcc_AQF5X_20220612_extracted.nc\")\n\ndf_csv = pd.read_csv(\"/groups/ESS/aalnaim/cmaq/prediction_files/prediction_rf_Jun13.csv\")\ndf_csv['YYYYMMDDHH'] = df_csv['YYYYMMDDHH'].astype(str)\ndf_filt = df_csv[df_csv['YYYYMMDDHH'].str.contains(\"20220613\")]\n\n# Reshape \"prediction/Latitude/Longitude\" columns to (TSTEP, ROW, COL), these lines will reshape data into (24, 265, 442)\nreshaped_prediction = np.atleast_3d(df_filt['prediction']).reshape(-1, 265, 442)\nreshaped_lat = np.atleast_3d(df_filt['Latitude']).reshape(-1, 265, 442)\nreshaped_lon = np.atleast_3d(df_filt['Longitude']).reshape(-1, 265, 442)\n\n# Remove \"LAY\" Dimension in O3 variable already in nc file.\nreduced_dim = df_cdf['O3'].sel(LAY=1, drop=True)\n# Swap values from original nc file with new prediction data\nreduced_dim.values = reshaped_prediction\n\n# Apply changes to data variable in nc file\ndf_cdf['O3'] = (['TSTEP', 'ROW', 'COL'], reshaped_prediction)\ndf_cdf['LAT'] = (['TSTEP', 'ROW', 'COL'], reshaped_lat)\ndf_cdf['LON'] = (['TSTEP', 'ROW', 'COL'], reshaped_lon)\n\ndf_cdf.to_netcdf('/groups/ESS/aalnaim/cmaq/prediction_nc_files/COMBINE3D_ACONC_v531_gcc_AQF5X_20220612_extracted.nc')",
  "history_output" : "Running",
  "history_begin_time" : 1655406353871,
  "history_end_time" : 1655493635343,
  "history_notes" : null,
  "history_process" : "3asyzj",
  "host_id" : null,
  "indicator" : "Stopped"
},{
  "history_id" : "f2HBptDwAyBk",
  "history_input" : "import xarray as xr\nimport pandas as pd\nimport glob, os\nimport numpy as np\nfrom pathlib import Path\nimport datetime\nfrom datetime import timedelta\n# home directory\nhome = str(Path.home())\n\n# nc file need to corespond to the same prediction date in \"/groups/ESS/aalnaim/cmaq/prediction_files/prediction_rf_Jun13.csv\"\ndf_cdf = xr.open_dataset(\"/groups/ESS/share/projects/SWUS3km/data/cmaqdata/CCTMout/12km/POST/COMBINE3D_ACONC_v531_gcc_AQF5X_20220612_extracted.nc\")\n\ndf_csv = pd.read_csv(\"/groups/ESS/aalnaim/cmaq/prediction_files/prediction_rf_Jun13.csv\")\ndf_csv['YYYYMMDDHH'] = df_csv['YYYYMMDDHH'].astype(str)\ndf_filt = df_csv[df_csv['YYYYMMDDHH'].str.contains(\"20220613\")]\n\n# Reshape \"prediction/Latitude/Longitude\" columns to (TSTEP, ROW, COL), these lines will reshape data into (24, 265, 442)\nreshaped_prediction = np.atleast_3d(df_filt['prediction']).reshape(-1, 265, 442)\nreshaped_lat = np.atleast_3d(df_filt['Latitude']).reshape(-1, 265, 442)\nreshaped_lon = np.atleast_3d(df_filt['Longitude']).reshape(-1, 265, 442)\n\n# Remove \"LAY\" Dimension in O3 variable already in nc file.\nreduced_dim = df_cdf['O3'].sel(LAY=1, drop=True)\n# Swap values from original nc file with new prediction data\nreduced_dim.values = reshaped_prediction\n\n# Apply changes to data variable in nc file\ndf_cdf['O3'] = (['TSTEP', 'ROW', 'COL'], reshaped_prediction)\ndf_cdf['LAT'] = (['TSTEP', 'ROW', 'COL'], reshaped_lat)\ndf_cdf['LON'] = (['TSTEP', 'ROW', 'COL'], reshaped_lon)\n\ndf_cdf.to_netcdf('/groups/ESS/aalnaim/cmaq/prediction_nc_files/COMBINE3D_ACONC_v531_gcc_AQF5X_20220612_extracted.nc')",
  "history_output" : null,
  "history_begin_time" : 1655406212085,
  "history_end_time" : null,
  "history_notes" : null,
  "history_process" : "3asyzj",
  "host_id" : null,
  "indicator" : null
},{
  "history_id" : "d4w6nlhuaxi",
  "history_input" : null,
  "history_output" : null,
  "history_begin_time" : null,
  "history_end_time" : 1656450968039,
  "history_notes" : null,
  "history_process" : "3asyzj",
  "host_id" : "p6wvf2",
  "indicator" : "Stopped"
},{
  "history_id" : "tyaio8q7nov",
  "history_input" : null,
  "history_output" : null,
  "history_begin_time" : null,
  "history_end_time" : 1656452485883,
  "history_notes" : null,
  "history_process" : "3asyzj",
  "host_id" : "p6wvf2",
  "indicator" : "Stopped"
},]
